{% extends 'bootstrap_3_layout.html.twig' %}

{% block elfinder_widget %}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-control')|trim}) %}
    <input type="text" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}
           data-type="elfinder-input-field"/>
    {% if enable and instance is defined %}
        <script type="text/javascript" charset="utf-8">
            document.addEventListener("DOMContentLoaded", function (event) {
                $('[data-type="elfinder-input-field"][id="{{ id }}"]').on("click", function () {
                    var childWin = window.open("{{ path('elfinder', {'instance': instance, 'homeFolder': homeFolder }) }}?id={{ id }}", "popupWindow", "height=450, width=900");
                });
            });

            function setValue(value, element_id) {
                $('[data-type="elfinder-input-field"]' + (element_id ? '[id="' + element_id + '"]' : '')).val(value).change();
            }
        </script>
    {% endif %}
{% endblock %}

{%- block collection_widget -%}
    {% if prototype is defined %}
        {%- set attr = attr|merge({'data-prototype': include(form.vars.attr['data-form-template'], {'form': form.vars.prototype}) }) -%}
    {% endif %}
    <div class="wh-form-field-multiple">
        <table class="table table-striped">
            <thead>
            <tr>
                <td>
                    <a href="#" id="{{ 'add-' ~ form.vars.name }}" class="btn btn-xs btn-primary">Add</a>
                </td>
                {% for child in form.vars.prototype.children %}
                    <td>{{ child.vars.label }}</td>
                {% endfor %}
            </tr>
            </thead>
            <tbody {{ block('widget_container_attributes') }}>
            {% for child in form.children %}
                <tr>
                    {{ include(form.vars.attr['data-form-template'], {'form': child}) }}
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
{%- endblock collection_widget -%}

{% block checkbox_radio_label %}
    {# Do not display the label if widget is not defined in order to prevent double label rendering #}
    {% if widget is defined %}
        {% if required %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if parent_label_class is defined %}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|trim}) %}
        {% endif %}
        {% if label is not same as(false) and label is empty %}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {% endif %}
        {{- widget|raw }}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
        {{ label is not same as(false) ? (translation_domain is same as(false) ? label : label|trans({}, translation_domain)) -}}
        </label>
    {% endif %}
{% endblock checkbox_radio_label %}


